version: '2'

volumes:
  data: {}
  vars: {}

services:
  rproxy:
    build:
      context: '.'
      dockerfile: './containers/rproxy/Dockerfile'
    links:
      - webapp
    expose:
      - '80'
    environment:
      VIRTUAL_HOST: $VIRTUAL_HOST
      LETSENCRYPT_HOST: $VIRTUAL_HOST
      LETSENCRYPT_EMAIL: deadzone@be.to
    networks:
      - front
      - default
    restart: always

  app-base:
    image: 'ktachiv/russ'
    environment:
      DATABASE_URL: 'postgres://postgres@database/postgres'
    volumes:
      - vars:/russ/config/vars
    command: /bin/true

  webapp:
    extends:
      service: app-base
    links:
      - database
    command: ['rails', 'app:server']
    expose:
      - 8080
    restart: always

  crawler:
    extends:
      service: app-base
    links:
      - database
    command: ['rails', 'app:crawler']
    mem_limit: 512m
    restart: always

  database:
    image: 'postgres:9.5'
    volumes:
      - data:/var/lib/postgresql/data
    restart: always

  app-onetime:
    extends:
      service: app-base
    links:
      - database
    command: /bin/true

  db-onetime:
    image: 'postgres:9.5'
    links:
      - database
    environment:
      PGHOST: database
      PGUSER: postgres
    command: /bin/true

networks:
  front:
    external: true
